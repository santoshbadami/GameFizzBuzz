@{ ViewBag.Title = "FizzBuzz Game";
    var pagedList = (IPagedList)ViewBag.Names; }


@using FizzBuzz.Web.XPagedList;
@using FizzBuzz.Web.XPagedList.Common
@using FizzBuzz.Web.XPagedList.Fluent
<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />

<h4>Enter Number</h4>
<div class="row"></div>
<form id="gameForm" class="center" asp-controller="Home" asp-action="Index" method="post">
    <div class="row">
        <div class="col-lg-3 col-md-3 col-sm-12">
            <label class="form-input">
                <i class="fa fa-chart-pie" aria-hidden="true"></i>
                <input type="number" id="number" name="number" min="1" required autofocus />
                <span class="label">Report</span>
                <span class="underline"></span>
            </label>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-12">
            <label class="form-input">
                <i class="fa fa-chart-pie" aria-hidden="true"></i>
                <input type="date" id="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="date" required autofocus />
                <span class="label">Report</span>
                <span class="underline"></span>
            </label>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-12">
            <div class="mt-3">
                <button type="submit" class="btn btn-default btn-success buttonPadding" name="button" value="submit" id="btnSubmit">Show</button>
            </div>
        </div>
    </div>
</form>

@if (ViewBag.Names != null)
{
    <table class="table">
        <thead>
            <tr>
                <th class="col-lg-6">Result</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in ViewBag.Names)
            {
                <tr>
                    <th scope="row">@obj.Value</th>
                </tr>
            }
        </tbody>
    </table>

    @(Html.Pager(pagedList)
            .Url(page => Url.Action("Pagination", new { page }))
            .DisplayLinkToFirstPage(PagedListDisplayMode.IfNeeded)
            .DisplayLinkToLastPage(PagedListDisplayMode.IfNeeded)
            .DisplayLinkToPreviousPage()
            .DisplayLinkToNextPage()
            .MaximumPageNumbersToDisplay(3)
            .Build())

}
